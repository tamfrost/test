# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:

  build-documentation:
    runs-on: ['self-hosted','ubuntu']
    env:
      NODE_EXTRA_CA_CERTS: /etc/ssl/certs/ca-certificates.crt
    permissions:
      contents: read
      packages: write
    steps:

      - name: set short commit hash and version
        run: |
          echo "CI_COMMIT_SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV
          echo "APP_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare .npmrc
        run: |
          echo -e ${{ secrets.NPMRC }} | base64 -d > ~/.npmrc
          [ -f /aws_login ] && /aws_login && cp ~/.npmrc ./ || echo "aws_login not found, skipping copy"

      - name: Build documentation
        uses: ./.github/actions/asciidoctor
        with:
          function: build_documentation
        env:
          CI_COMMIT_SHORT_SHA: ${{ env.CI_COMMIT_SHORT_SHA }}
          VARIABLE1: ${{ vars.VARIABLE1 }}

      - name: Build wasm
        uses: ./.github/actions/wasm
        with:
          function: build_wasm
        env:
          CI_COMMIT_SHORT_SHA: ${{ env.CI_COMMIT_SHORT_SHA }}
          VARIABLE1: ${{ vars.VARIABLE1 }}

      - name: Build package
        uses: ./.github/actions/node18
        with:
          function: build_package
        env:
          CI_COMMIT_SHORT_SHA: ${{ env.CI_COMMIT_SHORT_SHA }}
          # NPMRC: ${{ secrets.NPMRC }}

      - name: Publish package
        continue-on-error: true
        uses: ./.github/actions/node18
        with:
          function: publish_package
        env:
          CI_COMMIT_SHORT_SHA: ${{ env.CI_COMMIT_SHORT_SHA }}
          # NPMRC: ${{ secrets.NPMRC }}

      # - uses: ./.github/actions/my-action
      #   with:
      #     who-to-greet: 'Alice'

      - name: Fix permissions
        if: always()
        run: echo "${PPP}" | sudo -S chown -R $(whoami):$(whoami) ../../.

